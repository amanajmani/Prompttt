name: Performance Budget

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  performance-audit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Start application
        run: npm start &
        env:
          NODE_ENV: production

      - name: Wait for application to be ready
        run: npx wait-on http://localhost:3000 --timeout 60000

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Bundle Analysis
        run: npm run analyze
        env:
          ANALYZE: true

      - name: Comment PR with results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');

            // Read Lighthouse results if available
            let comment = '## Performance Budget Results\n\n';

            try {
              // Add bundle size information
              comment += '### Bundle Analysis\n';
              comment += 'Bundle analysis completed. Check the artifacts for detailed report.\n\n';
              
              // Add performance recommendations
              comment += '### Performance Recommendations\n';
              comment += '- Ensure Core Web Vitals are in the "Good" range\n';
              comment += '- Keep main bundle size under 200KB gzipped\n';
              comment += '- Optimize images and use next-gen formats\n';
              comment += '- Implement proper code splitting\n';
              
            } catch (error) {
              comment += 'Could not read performance results.\n';
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
